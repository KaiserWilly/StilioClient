package engine;

import java.io.Serializable;

/**
 * This class serves to simulate all of the actions that are taken using contracts
 */
public class Contract implements Serializable{
    private Company vendor;
    private Company contractee;
    private Integer unitsNeeded;
    private Double pricePerUnit;
    private Double totalPrice;
    private Integer creditOfContractor;
    private Double timeFrame;
    private Integer contractID;

    public Contract(Integer units, Double pricePer, Double total, Integer credit, Double time/*Don't know how we want to do this one however*/,Company contractor, Company client){
        vendor = contractor;
        contractee = client;
        unitsNeeded = units;
        pricePerUnit = pricePer;
        totalPrice = total;
        creditOfContractor = credit;
        timeFrame = time;
        contractID = contractID + 1;
    }
    public Contract(Company contractor, Company client){
        vendor = contractor;
        contractee = client;
    }

    public Company getVendor(){
        return vendor;
    }
    public Company getContractee(){
        return contractee;
    }
    public Integer getUnitsNeeded(){
        return unitsNeeded;
    }
    public Double getPricePerUnit(){
        return pricePerUnit;
    }
    public Double getTotalPrice(){
        return totalPrice;
    }
    public Integer getCreditOfContractor(){
        return creditOfContractor;
    }
    public Double getTimeFrame(){
        return timeFrame;
    }
    public Integer getContractID(){
        return contractID;
    }

    public void newContract(Integer unitsNeed, Double price, Double total, Integer credit, Double time, Company contractor, Company client){ //Used to create a new production contract to be added to the "global" contract server
        Contract contract = new Contract(unitsNeed, price, total, credit, time, contractor, client);
    }

    public boolean contractFulfilled(Double contractTimeFrame, Integer contractID){ //Checks to see if the contract was completed on time
        if (contractTimeFrame < timeFrame){
            return true;
        }
        else{
            return false;
        }
    }

    public void completeContract(Boolean fulfilled, Company vendor){ //Sets the rewards for completing the contract on time
        int score = vendor.getCreditScore();
        double money = totalPrice;
        int creditReward = 2;
        if (fulfilled){
            vendor.setCreditScore(score + creditReward);
            vendor.setMoneyOnHand(vendor.getMoneyOnHand() + money);
        }
        else{
            vendor.setCreditScore(score - creditReward);
        }
    }
}
